---
import {twMerge} from 'tailwind-merge'
 
interface Props {
	defaultTab?:string
}
 
const {
	defaultTab = '0',
} = Astro.props 
 
export const tw = {
	container: 'tab-group not-content flex justify-left md:gap-1 ',
	output: 'block -translate-y-1 p-4 w-full h-[35rem] overflow-y-scroll ' +
	  'bg-slate-100 dark:bg-gray-900 border-2 border-slate-600 ',
	tabItem: 'tab-item not-content select-none rounded-t-xl cursor-pointer border-2 border-slate-600 font-semibold',
	activeLight: 'bg-blue-200',
	activeDark: 'dark:bg-indigo-500',
	inactiveLight: 'bg-slate-200',
	inactiveDark: 'dark:bg-gray-900',
	textActiveLight: 'text-blue-950',
	textActiveDark: 'dark:text-zinc-50',
	textInactiveLight: 'text-emerald-900',
	textInactiveDark: 'dark:text-gray-400'
}



const hs = 
`
init
	set defaultTab to #{${defaultTab}}
	send activateTab(tab:defaultTab) to me
end

on activateTab(tab)
	remove .${tw.inactiveLight} .${tw.inactiveDark} from the tab
	remove .${tw.textInactiveLight} .${tw.textInactiveDark} from the tab
	add .${tw.activeLight} .${tw.activeDark} to the tab
	add .${tw.textActiveLight} .${tw.textActiveDark} to the tab
	send deactivateSiblings(activeTab:tab) to me
end 

on deactivateSiblings(activeTab)
 set allTabs to my children
 for tab in allTabs
   if tab is not the activeTab
		remove .${tw.activeLight} .${tw.activeDark}  from the tab
		remove .${tw.textActiveLight} .${tw.textActiveDark} from the tab
		add .${tw.inactiveLight} .${tw.inactiveDark} to the tab
		add .${tw.textInactiveLight} .${tw.textInactiveDark} to the tab
   end
end

`
 
---
 
<div class={tw.container}
	hx-trigger="click"
	hx-target="next <output/>"
	hx-swap="innerHTML transition:true"
	script={hs}>
  <slot/>
</div>
<output class={tw.output} style="margin-top:0;"/>

