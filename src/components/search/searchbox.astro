---
import ClickDropdownMenuA from '../ClickDropdownMenu_A.astro'
 
interface Props {
	id?:string
	caption?:string
	placeholder?:string
	searchPath:string
	target:string
	swapStrategy:string,
	width?:string,
	height?:string
}

export const defaultTextColors = 'text-slate-600'
export const defaultBackgroundColors = 'bg-yellow-200'
 
const {
	id,
	caption = "Search",
	placeholder = "Search for...",
	searchPath,
	target,
	swapStrategy,
	width = 'w-full',
	height = 'h-12'
} = Astro.props 

const tw = {

	wrapper: `flex-grow flex items-center overflow-hidden justify-around rounded-2xl ` +
	  defaultBackgroundColors,
	input: `${height} px-4 w-full font-inherit ` + 
	'font-bold text-lg ' + 
	' text-gray-900 dark:text-zinc-200 ' + 
	'bg-slate-200 dark:bg-slate-800  '+ 
	 'focus:outline-none placeholder-blue-300 dark:placeholder-cyan-600',
	icon:'inline-block size-6',
	leftIcon: '',
	rightIcon:'w-12 h-12 px-2 ' + defaultTextColors,
  menuItem: 'px-4 hover:bg-gray-200 hover:text-purple-600 ' +
    'hover:dark:bg-stone-300 hover:dark:text-sky-800',
	searchButton: 'p-0 mx-2 mt-1 cursor-pointer ' + 
		'font-extrabold ' + defaultTextColors +  ' hover:text-slate-950 dark:hover:text-yellow-600 ' +
		' bg-transparent hover:bg-transparent focus:ring-0',
	mark: 'bg-yellow-200 dark:bg-rose-200'
}
 
const hs = {
	click: `
		on click 
			send closeDropdown to the #{'search-options'} then settle then 
			set the value of the #{'search-criteria'} to my textContent 
			set the @title of #{'search-options'} to my textContent
		end `,
	reset: `
		on reset 
			set my value to ''
			set the value of #{'search-criteria'} to 'Contains'
			set the @title of #{'search-options'}  to 'Contains'
			set the value of #{'speech-index'} to ''
			call me.focus()
		end
	`
} 
 
---

	<div 
		id='search-wrapper' 
		class={tw.wrapper} 
		data-hilight-color=`${defaultBackgroundColors}`>
		<ClickDropdownMenuA id="search-options" buttonStyles={tw.searchButton} moveXY="-12,10" >
			<svg slot="rightIcon" class={tw.icon}  fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
				<path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6z"/>
			</svg>
			<li class={tw.menuItem} script={hs.click}>Contains</li>
			<li class={tw.menuItem} script={hs.click}>Whole Word</li>
			<li class={tw.menuItem} script={hs.click}>Case Sensitive</li>
			<li class={tw.menuItem} script={hs.click}>Case Insensitive</li>
			<li class={tw.menuItem} script={hs.click}>Begins With</li>
			<li class={tw.menuItem} script={hs.click}>Ends With</li>
		</ClickDropdownMenuA>
		<input type="hidden" id="speech-index" name="speech-index" value=""/>
		<input type="hidden" id="search-criteria" name="search-criteria" value="Whole Word"/>
		<input type="hidden" id="hilight-color" name="hilight-color" value=`${defaultBackgroundColors}`/>
		<input
		  id=`${id}`
			type="search"
			name="search"
			placeholder={placeholder}
			class={tw.input}
			hx-post=`${searchPath}`
			hx-include="<input/>"
			hx-trigger="input changed delay:500ms, search, update"
			hx-target=`${target}`
			hx-swap=`${swapStrategy}`
			script={hs.reset}
			>
		</input>
		<slot name="rightIcon" >
			<svg 
					fill="currentColor" 
					class={tw.rightIcon}
					version="1.1" 
					id="Capa_1" 
					xmlns="http://www.w3.org/2000/svg" 
					xmlns:xlink="http://www.w3.org/1999/xlink" 
					viewBox="0 0 490.4 490.4" 
					xml:space="preserve">
						<g id="SVGRepo_bgCarrier" 
						stroke-width="0">
					</g>
					<g id="SVGRepo_tracerCarrier" 
					stroke-linecap="round" 
					stroke-linejoin="round">
				</g>
				<g id="SVGRepo_iconCarrier"> 
					<g> 
						<path d="M484.1,454.796l-110.5-110.6c29.8-36.3,47.6-82.8,47.6-133.4c0-116.3-94.3-210.6-210.6-210.6S0,94.496,0,210.796 s94.3,210.6,210.6,210.6c50.8,0,97.4-18,133.8-48l110.5,110.5c12.9,11.8,25,4.2,29.2,0C492.5,475.596,492.5,463.096,484.1,454.796z M41.1,210.796c0-93.6,75.9-169.5,169.5-169.5s169.6,75.9,169.6,169.5s-75.9,169.5-169.5,169.5S41.1,304.396,41.1,210.796z">
						</path> 
						</g> 
					</g>
				</svg>
		</slot>
	</div>

