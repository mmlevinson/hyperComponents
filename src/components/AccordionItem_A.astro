---
import {twMerge} from 'tailwind-merge'

interface Props {
	id:string,   //a unique identifier allowing multiple AccordionItems on a page without collisions
	caption:string,   //the text display in the Accordion header
	prefix?:string   //a tick mark preceeding the caption
	maxHeight:string  //maximum open height (after which the body content scrolls vertically)
	headerStyles?:string   //override or add TW classes to  the header
	bodyStyles?:string   //override or add TW classes to the body
	activeHeaderStyles?:string //override, add, remove TW classes for headers of opened Accordions
	openDuration?:string   //transition timing when showing body content
	closeDuration?:string  //transition timing when hiding body content
}
const {
	id, 
	caption, 
	prefix='- ',
	maxHeight='300px',
	headerStyles,
	bodyStyles,
	activeHeaderStyles = 'bg-orange-100 dark:bg-blue-800',
	openDuration='260ms',
	closeDuration='400ms'
} = Astro.props


const tw = {
	wrapper:'shadow-lg overflow-hidden ' + 
	'border-4 border-b-0 last-of-type:border-b-4 border-indigo-500 border-opacity-20  dark:border-gray-700 ' + 
	'first-of-type:rounded-t-xl last-of-type:rounded-b-xl',
	accordionHeader: twMerge('w-full flex justify-between items-center px-2 py-5 cursor-pointer ' +
		'font-bold text-lg text-left text-gray-900 dark:text-zinc-300 ' +
		'bg-blue-100 hover:bg-sky-950 hover:text-yellow-50 ' +
		'dark:bg-slate-900 dark:hover:bg-purple-950 dark:hover:text-fuchsia-100 ' + 
		'', headerStyles),
	accordionBody: twMerge('h-0 px-6 text-left  border-zinc-300 ' + 
		' bg-gray-100 text-slate-800 dark:bg-violet-50 dark:text-gray-900', bodyStyles),
	icon: 'size-6 shrink-0'
}

function formatTWClasses(twClasses) {
    return twClasses.split(' ').map(twClass => '.' + twClass).join(' ');
}

const activeStyles = formatTWClasses(activeHeaderStyles)

const hs = `
	init
		set :accordionHeight to 0
		set :accordionOpen to false
		set :accordionBody to my @id + '-body'
		set :twirlIcon to my @id + '-twirl-icon'
		set accordionContent to the children of the #{:accordionBody}
		for item in accordionContent 
			increment :accordionHeight by the item's offsetHeight
		end -- for
		increment :accordionHeight by 45  -- to accomodate for py-4 
	end -- init

	on click from me
		if :accordionOpen is true then trigger closeAccordion on me
		otherwise trigger openAccordion on me
		end 
	end -- click

	on openAccordion
		add ${activeStyles} to me
		add .py-4 .border-t-2 to the  #{:accordionBody}
		if the :accordionHeight is greater than 300
			transition the #{:accordionBody}'s  *height to ${maxHeight}  using 'all ${openDuration} ease-in'
			add .overflow-y-auto to the #{:accordionBody}
		otherwise
			transition the #{:accordionBody} *height to :accordionHeight px using 'all ${openDuration} ease-in'
		end -- if > 300 px
		add .rotate-180 to the #{:twirlIcon}
		set :accordionOpen to true
		send closeOpenAccordions to the closest <ul/>
	end -- openAccordion

	on closeAccordion
		remove ${activeStyles} from me
		remove .py-4 .border-t-2 from the #{:accordionBody}
		remove .rotate-180 from the #{:twirlIcon}
		transition the #{:accordionBody} *height to 0 using 'all ${closeDuration} ease-out'
		set :accordionOpen to false
	end -- closeAccordion
`



/* Transition calls and toggle .rotate-180 gives an error when using an element reference stored in local variable
You must provide an actual selector instead.

If you add padding to the default styles, the accordion accordionBody has a height equal to the padding
even if you set h-0.   So, padding must be added/removed for the accordion accordionBody to close up fully.
The recalcHeight of accordion accordionBody must also take in account the vertical padding value*/
---


<li class={tw.wrapper}>

	<!-- Accordion Header -->
	<button 
		id={id} 
		class={tw.accordionHeader} 
		script={hs}>
			<span>{prefix}{caption}</span>
			<!-- TwirlIcon -->
			<svg id={`${id}-twirl-icon`} class={tw.icon} fill='currentColor' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>
					<path fill-rule='evenodd' d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z' clip-rule='evenodd'></path>
				</svg>
	</button>

	<!-- Accordion Body -->
	<div 	id={`${id}-body`} class={tw.accordionBody}>
		<slot />
	</div>

</li> 