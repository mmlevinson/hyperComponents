---
import {twMerge} from 'tailwind-merge'


const defaultOverscrollHeight = 400
const defaultDuration = 200

interface Props {
	id:string,
	caption?:string
	altCaption?:string
	maxHeight?:number
}

const {
	id,
	caption,
	altCaption,
	maxHeight = 500,
} = Astro.props

export const tw = {
	wrapper: 'mb-8 ',

	body: 'body h-0 px-4 text-pretty text-gray-700 dark:text-zinc-200 dark:bg-slate-900 overflow-y-auto',
	button: 'text-right w-full  px-4 py-1 cursor-pointer ' + 
	'text-sm font-fjalla text-end ' + 
	'text-gray-400 bg-indigo-950 opacity-50 hover:opacity-70 ' +
	'dark:text-zinc-200 dark:bg-sky-900 ',
	icon: 'inline-block size-6 ml-2'
}

const apiRoute = 'api/readmore/' + id


const hs = `

	def calcHeight()
		set openHeight to 0
		set readMoreContent to the children of the next .body
		for item in readMoreContent 
			increment openHeight by the item's offsetHeight
		end
		increment openHeight by 25

		return openHeight 
	end 

	on mouseenter from me
		get the innerHTML of the next .body
		if it is empty then 
			fetch ${apiRoute}  as html then put the result into the next .body
	end 

	on click from me
		add .bg-green-950 to me
		remove .bg-indigo-950 from me then settle then
		measure the next .body
		if the result.height is greater than 0 then send closeUp to me
		otherwise send openUp to me end
		remove .bg-green-950 from me
		add .bg-indigo-950 to me then settle
	end 

	on openUp
		-- send closeOtherReadMores to closest parent <ul/>
		set my innerHTML to '${caption}'
		set bodyHeight to calcHeight()
		if bodyHeight is greater than ${maxHeight} then
			set the *height of the next .body to ${maxHeight} px then settle
			add .overflow-y-auto to the next .body
		otherwise     
			set the *height of the next .body to the bodyHeight px then settle
			remove .overflow-y-auto from the next .body
		end 
	end

	on closeUp
		put '${altCaption}' into me
		set the *height of the next .body to 0 then settle
		
	end
`

---


	<li id={id} class={tw.wrapper}>
		<div>
			<!-- Default Slot for introductory content-->
			<slot/>
		</div>
			<!-- Read More Trigger Button -->
		<div class="flex justify-end items-center bg-blue-900 w-full rounded-lg ">
			<button class={tw.button}
				script={hs}>
				{caption}
			</button>
			<slot name='twirl-icon>'> 
				<!-- TwirlIcon -->
			<svg id={`twirl-icon-${id}`} class={tw.icon} fill='currentColor' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>
					<path fill-rule='evenodd' d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z' clip-rule='evenodd'></path>
				</svg>
			</slot>
			
		</div>
			

		<!-- Body -->
		{/* Must leave this div empty, will be lazy loaded by the above fetch call*/}
		{/* Add .body class so the script will find this div */}
		<div  class={tw.body} style="transition: all 250ms ease-out"></div>	
	</li>